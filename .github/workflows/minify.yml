name: Minify Lua Plugin

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]
  release:
    types: [ published ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set date for cache key
        id: date
        run: echo "day=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

      - name: Set up Lua 5.3
        uses: leafo/gh-actions-lua@v11
        with:
          luaVersion: "5.3"
        continue-on-error: true

      - name: Fallback: apt-install Lua
        if: steps.setup_lua_action.outcome != 'success'
        run: |
          sudo apt-get update
          sudo apt-get install -y lua5.3 liblua5.3-dev

      - name: Install Task runner
        uses: arduino/setup-task@v1
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & package
        run: |
          task ci_minify
          task release_zip

      - name: Auto-tag dev builds
        if: github.ref == 'refs/heads/dev'
        run: |
          ts=$(date +'%Y%m%d-%H%M')
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git tag "dev-$ts"
          git push origin "dev-$ts"

      - name: Upload artifact for PR/dev
        if: github.event_name != 'release'
        uses: actions/upload-artifact@v4
        with:
          name: miniflux.koplugin.zip
          path: ./miniflux.koplugin.zip

      - name: Upload release asset
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./miniflux.koplugin.zip
          asset_name: miniflux.koplugin.zip
          asset_content_type: application/zip