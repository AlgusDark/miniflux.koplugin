name: Minify Lua Plugin

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [published]

jobs:
  minify_and_package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Lua
        uses: leafo/gh-actions-lua@v9
        with:
          luaVersion: "5.3"

      - name: Install LuaSrcDiet
        run: |
          git clone https://github.com/jirutka/luasrcdiet.git
          cd luasrcdiet
          make install LUA_VERSION_SUFFIX=5.3 PREFIX=/usr/local
          cd ..
          luasrcdiet --version

      - name: Install zip for packaging
        if: github.event_name == 'release'
        run: sudo apt-get update && sudo apt-get install -y zip

      - name: Create dist directory
        run: mkdir -p dist/miniflux.koplugin

      - name: Find and remove typedefs directories
        run: |
          find . -type d -name "typedefs" -print0 | xargs -0 -I {} rm -rf {}
          echo "Removed typedefs directories"

      - name: Minify Lua files
        run: |
          # Optional: Syntax check Lua files before minifying
          echo "Checking Lua syntax..."
          find . -path ./dist -prune -o -name "*.lua" -print0 | xargs -0 -I {} luac5.3 -p {}
          if [ $? -ne 0 ]; then
            echo "Lua syntax check failed."
            exit 1
          fi
          echo "Lua syntax check passed."

          echo "Minifying Lua files..."
          # Find all .lua files, excluding those in dist/ and .github/
          find . -path ./dist -prune -o -path ./.git -prune -o -path ./luasrcdiet -prune -o -path ./.github -prune -o -name "*.lua" -print | while read file; do
            # Calculate the relative path for the output file
            relative_path=$(echo "$file" | sed 's|^\./||')
            output_file="dist/miniflux.koplugin/$relative_path"
            # Create the directory structure in dist
            mkdir -p "$(dirname "$output_file")"
            # Minify the file
            echo "Minifying $file to $output_file"
            luasrcdiet --noopt-base --opt-comments --opt-whitespace "$file" -o "$output_file"
            if [ $? -ne 0 ]; then
              echo "Failed to minify $file"
              exit 1
            fi
          done
          echo "Minification complete."

      - name: Package for Release
        if: github.event_name == 'release'
        run: |
          echo "Packaging dist/miniflux.koplugin for release..."
          cd dist
          zip -r ../miniflux.koplugin.zip miniflux.koplugin
          cd ..
          echo "Created miniflux.koplugin.zip"

      - name: Upload Release Asset
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./miniflux.koplugin.zip
          asset_name: miniflux.koplugin.zip
          asset_content_type: application/zip
